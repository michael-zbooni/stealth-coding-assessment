# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_qa:
    runs-on: ubuntu-latest
    container: node:lts
    env:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/stealth_assessment
      EMAILJS_PUBLIC_KEY: ${{ secrets.EMAILJS_PUBLIC_KEY }}
      EMAILJS_PRIVATE_KEY: ${{ secrets.EMAILJS_PRIVATE_KEY }}
      # This is just to make @jmondi/oauth2-server JwtService work
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_DB: stealth_assessment
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout Git repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Unit Tests
        run: npm test

      - name: Deploy to "Staging Hehe" (render.com)
        run: >
          echo "CI passed: Automatically deploying to staging (hehe)..." &&
          curl -X GET "$RENDER_DEPLOY_HOOK_URL"
